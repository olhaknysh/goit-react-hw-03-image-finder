{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Error/Error.jsx","services/galleryApi.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","inputValue","setInputValue","e","preventDefault","className","type","value","onChange","target","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","onShowModal","onShowImage","src","webformatURL","alt","tags","onClick","ImageGallery","images","map","id","modalRoot","document","querySelector","Modal","handleEscapeClose","key","props","onCloseModal","handleModalCLose","currentTarget","window","addEventListener","this","removeEventListener","createPortal","tabIndex","largeImageURL","Component","Button","onLoadMore","LoaderImage","color","height","width","Error","error","axios","defaults","baseURL","getImages","query","page","get","then","data","hits","App","setImages","setQuery","loadMorePage","setLoadMorePage","isLoading","setIsLoading","modal","setModal","modalImage","setModalImage","setError","useEffect","scrollTo","top","documentElement","scrollHeight","behavior","handleModal","search","results","catch","message","finally","length","prevState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b96296ac.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Searchbar.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = e => setInputValue(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <header onSubmit={handleSubmit} className=\"Searchbar\">\n      <form className=\"SearchForm\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          value={inputValue}\n          onChange={handleInputChange}\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nconst ImageGalleryItem = ({ image, onShowModal, onShowImage }) => {\n  const handleModalOpen = () => {\n    onShowModal();\n    onShowImage(image);\n  };\n\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={image.webformatURL}\n        alt={image.tags}\n        onClick={handleModalOpen}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string,\n    tags: PropTypes.string,\n  }),\n  onShowModal: PropTypes.func.isRequired,\n  onShowImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import './ImageGallery.css';\nimport ImageGalleryItem from './ImageGalleryItem';\n\nconst ImageGallery = ({ images, onShowModal, onShowImage }) => (\n  <ul className=\"ImageGallery\">\n    {images.map(image => (\n      <ImageGalleryItem\n        key={image.id}\n        image={image}\n        onShowModal={onShowModal}\n        onShowImage={onShowImage}\n      />\n    ))}\n  </ul>\n);\n\nexport default ImageGallery;\n","import { createPortal } from 'react-dom';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleEscapeClose);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleEscapeClose);\n  }\n\n  handleEscapeClose = e => {\n    if (e.key === 'Escape') {\n      this.props.onCloseModal();\n    }\n  };\n\n  handleModalCLose = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onCloseModal();\n    }\n  };\n\n  render() {\n    const { image } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleModalCLose} tabIndex=\"0\">\n        <div className=\"Modal\">\n          <img src={image.largeImageURL} alt={image.tags} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  image: PropTypes.shape({\n    largeImageURL: PropTypes.string,\n    tags: PropTypes.string,\n  }),\n  onCloseModal: PropTypes.func,\n};\n\nexport default Modal;\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nconst Button = ({ onLoadMore }) => {\n  const handleLoadMore = () => onLoadMore();\n\n  return (\n    <button className=\"Button\" type=\"button\" onClick={handleLoadMore}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport './Loader.css';\n\nconst LoaderImage = () => (\n  <Loader\n    className=\"Loader\"\n    type=\"ThreeDots\"\n    color=\"#3f51b5\"\n    height={40}\n    width={40}\n  />\n);\n\nexport default LoaderImage;\n","import PropTypes from 'prop-types';\nimport './Error.css';\n\nconst Error = ({ error }) => <p className=\"Error\">{error}</p>;\n\nError.propTypes = {\n  error: PropTypes.string,\n};\n\nexport default Error;\n","import axios from 'axios';\n\nconst apiKey = '20378001-e5e40f3ffb0fb0828fca51f1b';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst getImages = (query, page) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?key=${apiKey}&q=${query}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(({ data: { hits } }) => hits);\n};\n\nexport default getImages;\n","import { useState, useEffect } from 'react';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\nimport Error from './components/Error';\n\nimport getImages from './services/galleryApi';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [query, setQuery] = useState('');\n  const [loadMorePage, setLoadMorePage] = useState(2);\n  const [isLoading, setIsLoading] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [modalImage, setModalImage] = useState({});\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }, [images]);\n\n  const setImagesByQuery = search => {\n    const page = 1;\n    setIsLoading(true);\n\n    getImages(search, page)\n      .then(results => setImages(results))\n      .catch(error => setError(error.message))\n      .finally(() => setIsLoading(false));\n\n    setQuery(search);\n    setLoadMorePage(2);\n    setError('');\n  };\n\n  const handleModal = () => {\n    setModal(!modal);\n  };\n\n  const handleModalImage = image => {\n    setModalImage(image);\n  };\n\n  const handleLoadMore = () => {\n    setIsLoading(true);\n    getImages(query, loadMorePage)\n      .then(results => setImages(prevState => [...prevState, ...results]))\n      .catch(error => setError(error.message))\n      .finally(() => setIsLoading(false));\n    setLoadMorePage(prevState => prevState + 1);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={setImagesByQuery} />\n      <ImageGallery\n        images={images}\n        onShowModal={handleModal}\n        onShowImage={handleModalImage}\n      />\n\n      {error && <Error error={error} />}\n\n      {images.length > 0 && !isLoading && (\n        <Button onLoadMore={handleLoadMore} />\n      )}\n      {isLoading && <Loader />}\n\n      {modal && <Modal image={modalImage} onCloseModal={handleModal} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}